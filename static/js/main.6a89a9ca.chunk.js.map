{"version":3,"sources":["components/Info.jsx","components/Card.jsx","components/ImagePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Text","styled","h1","Additional","h2","Info","Img","img","Block","div","Card","key","source","name","description","src","ImageWrap","CloseButton","p","Image","ButtonText","Loading","ImagePage","props","useState","url","setURL","useEffect","getImageDetail","axios","get","match","params","id","then","data","urls","regular","to","GlobalStyle","createGlobalStyle","CardWrapper","Gallery","information","setData","getData","res","console","log","dataLength","length","next","hasMore","map","info","small","user","username","alt_description","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGMA,EAAOC,IAAOC,GAAV,4EAIJC,EAAaF,IAAOG,GAAV,iGAMHC,EAAO,WACjB,OACG,gCACG,cAACL,EAAD,wCACA,cAACG,EAAD,6DCdHG,EAAML,IAAOM,IAAV,yRAeHC,EAAQP,IAAOQ,IAAV,qMAaEC,EAAO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,YAEtC,OACG,8BACG,eAACN,EAAD,WACG,cAACF,EAAD,CAAeS,IAAKH,GAAVD,GACV,6CAAgBE,KAChB,8CAAiBC,W,yBCjCvBE,EAAYf,IAAOQ,IAAV,kLAUTQ,EAAchB,IAAOiB,EAAV,4nBA+BXC,EAAQlB,IAAOM,IAAV,iUAaLa,EAAanB,IAAOiB,EAAV,wSAcVG,EAAUpB,IAAOiB,EAAV,0JAOAI,EAAY,SAACC,GAAW,IAAD,EACbC,mBAAS,IADI,mBAC5BC,EAD4B,KACvBC,EADuB,KAIjCC,qBAAU,WACPC,MACA,IAEH,IAAIA,EAAiB,WAElBC,IACIC,IADJ,UARc,2BAQd,mBAC8BP,EAAMQ,MAAMC,OAAOC,GADjD,iFAEIC,MAAK,SAAAC,GACHT,EAAOS,EAAKA,KAAKC,KAAKC,aAI/B,OACG,eAACrB,EAAD,WACG,cAAC,IAAD,CAAMsB,GAAG,oBAAT,SAA6B,cAACrB,EAAD,UAAa,cAACG,EAAD,wBAC1C,cAACC,EAAD,8CACA,cAACF,EAAD,CAAuBJ,IAAKU,GAAhBF,EAAMZ,S,eC3FrB4B,EAAcC,YAAH,sPAaXC,EAAcxC,IAAOQ,IAAV,gSA8BjB,SAASiC,IAAW,IAAD,EACclB,mBAAS,IADvB,mBACVmB,EADU,KACGC,EADH,KAGjBjB,qBAAU,WACRkB,MACC,IAEH,IAAMA,EAAU,WAGdhB,IACGC,IADH,UAFiB,2BAEjB,wFAEGI,MAAK,SAAAY,GAAG,OAAIF,EAAQ,GAAD,mBAAKD,GAAL,YAAqBG,EAAIX,YAEjD,OACC,gCACE,cAAC,EAAD,IACGY,QAAQC,IAAIL,GAChB,cAACJ,EAAD,IACA,cAAC,IAAD,CAAgBU,WAAcN,EAAYO,OAC1CC,KAAQN,EACRO,SAAW,EAFX,SAIE,eAACX,EAAD,eACEE,EAAYU,KAAI,SAAAC,GAAI,OAClB,cAAC,IAAD,CAAMhB,GAAE,4BAAuBgB,EAAKrB,IAApC,SACE,cAAC,EAAD,CACMrB,OAAU0C,EAAKlB,KAAKmB,MACpB1C,KAAQyC,EAAKE,KAAKC,SAClB3C,YAAewC,EAAKI,iBAHbJ,EAAKrB,KADpB,UAAkDqB,EAAKrB,gBAalD0B,MApDf,WAAgB,IAAD,EACb,OACA,qBAAKC,UAAY,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,UAAWzC,IACrD,cAAC,KAAD,GAAOuC,OAAK,EAACC,KAAK,qBAAlB,oDAAuDpB,GAAvD,YCjCOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a89a9ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.h1`\r\n   text-align: center;\r\n   margin: 50px 0 0;  \r\n`;\r\nconst Additional = styled.h2`\r\n   text-align: center;\r\n   font-size: 18px;  \r\n   margin-top: 10px;\r\n`;\r\n\r\nexport const Info = () => {\r\n   return (\r\n      <div>\r\n         <Text>Infinite Unsplash Gallery</Text>\r\n         <Additional>Click on the image to open it in full size</Additional>  \r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n   width: 100%;\r\n   object-fit: cover;\r\n   cursor: pointer;\r\n   margin:50px 0 0 0;\r\n   border-radius: 10px;\r\n   border:20px solid black;\r\n   transition: 0.1s;\r\n\r\n   :hover{\r\n      border:20px solid rgba(0,0,0,0.9);\r\n      transform: scale(0.95);\r\n   }\r\n`;\r\n\r\nconst Block = styled.div`\r\n   max-width:300px;\r\n\r\n   @media screen and (max-width:920px){\r\n      max-width: 350px;\r\n   }\r\n\r\n   @media screen and (max-width:700px){\r\n      max-width: 700px;\r\n   }\r\n`;\r\n\r\n\r\nexport const Card = ({ key, source, name,description}) => {\r\n\r\n   return (\r\n      <div>\r\n         <Block>\r\n            <Img key={key} src={source} />\r\n            <h2>User name: {name}</h2>\r\n            <p>Description: {description}</p>\r\n         </Block>\r\n      </div>\r\n   )\r\n}\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst ImageWrap = styled.div`\r\n   display: flex;\r\n   justify-content: center;\r\n\r\n   @media screen and (max-width: 1200px){\r\n      flex-direction: column;\r\n      width: 100%;\r\n   }\r\n`;\r\n\r\nconst CloseButton = styled.p`\r\n   font-family: 'Helvetica';\r\n   background: rgb(50,50,50);\r\n   outline: none;\r\n   border: none;\r\n   border-top-left-radius: 10px;\r\n   border-bottom-left-radius: 10px;\r\n   cursor: pointer;\r\n   color: white;\r\n   font-weight: bold;\r\n   padding: 23px 0;\r\n   \r\n   transition: 0.1s;\r\n   margin: 0;\r\n\r\n   &:hover{\r\n      color:  rgb(50,50,50);\r\n      transition: 0.3s;\r\n   }\r\n\r\n   @media screen and (max-width: 1200px){\r\n      padding: 10px 0;\r\n      text-align: center;\r\n      border-top-left-radius: 10px;\r\n      border-top-right-radius: 10px;\r\n      border-bottom-left-radius: 0px;\r\n      width: 100%;\r\n   }\r\n\r\n`;\r\n\r\nconst Image = styled.img`\r\n   border-top-right-radius: 10px;\r\n   border-bottom-right-radius: 10px;\r\n   z-index: 100;\r\n   width: 100%;\r\n   height: 100%;\r\n   @media screen and (max-width: 1200px){\r\n      border-top-right-radius: 0px;\r\n      border-bottom-left-radius: 10px;\r\n      border-bottom-right-radius: 10px;\r\n   }\r\n`;\r\n\r\nconst ButtonText = styled.p`\r\n   text-decoration: none;  \r\n   transform: rotate(-90deg);\r\n   font-size: 24px;\r\n   padding: 0 0;\r\n   @media screen and (max-width: 1200px){\r\n      transform: rotate(0deg);\r\n   }\r\n   &:hover{\r\n      transform:scale(1.1) rotate(-90deg);\r\n      transition: 0.2s;\r\n   }\r\n`;\r\n\r\nconst Loading = styled.p`\r\n   position: absolute;\r\n   font-size: 40px;\r\n   margin-top: 120px;\r\n   font-family: 'Helvetica', sans-serif;\r\n   z-index: 0;\r\n`;\r\nexport const ImagePage = (props) => {\r\n   let [url, setURL] = useState('');\r\n   const api_root = 'https://api.unsplash.com';\r\n\r\n   useEffect(() => {\r\n      getImageDetail();\r\n   }, []);\r\n\r\n   let getImageDetail = () => {\r\n\r\n      axios\r\n         .get(`${api_root}/photos/${props.match.params.id}/?client_id=cf49c08b444ff4cb9e4d126b7e9f7513ba1ee58de7906e4360afc1a33d1bf4c0`)\r\n         .then(data => {\r\n            setURL(data.data.urls.regular);\r\n         });\r\n   }\r\n\r\n   return (\r\n      <ImageWrap>\r\n         <Link to=\"/unsplash-gallery\"><CloseButton><ButtonText>Close</ButtonText></CloseButton></Link>\r\n         <Loading>Please wait. Image is loading..</Loading>\r\n         <Image key={props.key} src={url}/>\r\n      </ImageWrap>\r\n   )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { Info } from './components/Info';\nimport { Card } from './components/Card';\nimport { ImagePage } from './components/ImagePage';\n\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport styled, {createGlobalStyle} from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst GlobalStyle = createGlobalStyle `\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Helvetica', 'Arial', sans-serif;\n    user-select: none;\n    text-decoration: none;\n    color: black;\n    cursor: default;\n  }\n`;\n\nconst CardWrapper = styled.div `\n  max-width: 1000px;\n  padding: 0 8px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: space-between;\n  \n  @media screen and (max-width:700px){\n    justify-content: center;\n    max-width: 95%;\n }\n`;\n\n\nfunction App() {\n  return ( \n  <div className = \"App\" >\n    <Router>\n      <Switch>\n        <Route exact path=\"/unsplash-gallery/:id\" component={ImagePage} />\n        <Route exact path=\"/unsplash-gallery\" exact component={Gallery} />\n      </Switch>\n    </Router>\n  </div>\n  );\n}\n\n\nfunction Gallery() {\n  const [information, setData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    const api_root = 'https://api.unsplash.com';\n\n    axios\n      .get(`${api_root}/photos/?client_id=cf49c08b444ff4cb9e4d126b7e9f7513ba1ee58de7906e4360afc1a33d1bf4c0`)\n      .then(res => setData([...information, ...res.data]));\n  }\n  return (\n   <div>\n     <Info />\n       {console.log(information)}\n    <GlobalStyle />\n    <InfiniteScroll dataLength = {information.length}\n    next = {getData}\n    hasMore = {true} >\n\n      <CardWrapper > {\n        information.map(info => ( \n          <Link to={`/unsplash-gallery/${info.id}`} key={`${info.id}` }>\n            <Card key = {info.id}\n                  source = {info.urls.small}\n                  name = {info.user.username}\n                  description = {info.alt_description}/>\n          </Link>\n         ))\n      }</CardWrapper>\n    </InfiniteScroll>\n   </div> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}